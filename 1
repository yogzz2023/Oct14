To run your executable as a service on a Linux system and have it print messages during boot based on its output, you can create a systemd service unit. Here are the steps to achieve this:

1. Create a systemd service unit file:
   You can use a text editor to create a service unit file. For example, using the `nano` text editor:
   ```
   sudo nano /etc/systemd/system/my_service.service
   ```

2. Add the following content to the service unit file, adjusting the values as needed:

   ```ini
   [Unit]
   Description=My Custom Service
   After=network.target
   
   [Service]
   ExecStart=/home/user1/downloads/your_executable
   Restart=always
   StandardOutput=syslog
   StandardError=syslog
   SyslogIdentifier=my_service
   
   [Install]
   WantedBy=multi-user.target
   ```

   Make sure to replace `/home/user1/downloads/your_executable` with the actual path to your executable.

3. Save and exit the text editor.

4. Reload systemd to read the new service configuration:
   ```
   sudo systemctl daemon-reload
   ```

5. Start your service:
   ```
   sudo systemctl start my_service
   ```

6. Enable your service to start on boot:
   ```
   sudo systemctl enable my_service
   ```

Now, your executable will run as a service and print messages during boot based on its output. You can view the output and logs in the system's syslog or journal using commands like `journalctl -u my_service` to monitor the service's status and logs.
